[package]
name = "warp"
version = "0.1.0"
description = "TBD"
# readme = "README.md"
license = "MIT"
edition = "2021"
repository = "https://github.com/Satellite-im/Warp"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
crate-type = ["cdylib", "rlib", "staticlib"]


[dependencies]

futures = { version = "0.3" }
async-trait = { version = "0.1" }

x25519-dalek = { version = "1" }
ed25519-dalek = { version = "1" }
curve25519-dalek = "3.2"
rsa = { version = "0.5" }
chacha20poly1305 = { version = "0.9", features = ["stream"] }
blake2 = { version = "0.10"  }
sha1   = { version = "0.10" }
sha2   = { version = "0.10"  }
sha3   = { version = "0.10"  }
digest = { version = "0.10" }
aes-gcm = { version = "0.9" }
aead = { version = "0.4", default-features = false }
anyhow = { version = "1" }
zeroize = "1"
cfg-if = "1.0"
rand = { version = "0.7"  }

uuid = { version = "0.8", features = ["serde", "v4"] }
base64 = { version = "0.13" }
thiserror = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
serde_yaml = "0.8"
toml = "0.5"
chrono = { version = "0.4", features = ["serde"] }
regex = "1.5"
bs58 = "0.4.0"
tiny-bip39 = "0.8"
hex = "0.4"

derive_more = "0.99"


[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
users = { git = "https://github.com/Satellite-im/solana-programs", features = ["no-entrypoint"], rev = "139e02a0060f7ba94e998abb4d64451d2de61ad0"}
friends = { git = "https://github.com/Satellite-im/solana-programs", features = ["no-entrypoint"], rev = "139e02a0060f7ba94e998abb4d64451d2de61ad0" }
groupchats = { git = "https://github.com/Satellite-im/solana-programs", features = ["no-entrypoint"], rev = "139e02a0060f7ba94e998abb4d64451d2de61ad0" }
getrandom = { version = "0.2" }
anchor-client = "0.24.2"
uuid = { version = "0.8", features = ["serde", "v4"] }
tokio = { version = "1", features = ["full"] }
tokio-util = { version = "0.6", features = ["full"] }
tokio-stream = { version = "0.1", features = ["net"] }
# TODO: Remove blocking feature and use async in the future
reqwest = { version = "0.11", features = ["blocking", "json"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
uuid = { version = "0.8", features = ["serde", "v4", "wasm-bindgen"] }
getrandom = { version = "0.2", features = ["js"] }
wasm-bindgen = { version = "0.2" }
web-sys = { version = "0.3" }
js-sys = { version = "0.3" }
serde-wasm-bindgen = "0.4.2"

[dev-dependencies]
lazy_static = "1.4"
